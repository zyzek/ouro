
-------------------------------------------------------------------------------
COMP3109 Assignment 2. Compiler Front End

Name

  Anton Jurisevic
  Jeremy Short
  Trung Tran


What tasks did you complete?

  Task 1 - Syntax and Semantics Analysis
  Task 2 - Intermediate Code Generation
  Task 3 - Interpreter
  Task 4 - Infix Operators
  Task 5 - While Loops

  Other:
  + Richer operators:
    - Operator precedence;
    - Extended arithmetic and logical operations;
    - Unary/Binary operator distinction
  + Source file preprocessor for library importation
    - Handles circular dependencies
    - Included math and number-theory toy libraries
  + Extended language semantics:
    - Expressions go where only ids could before
    - Multiple-assignment:
        a, b, c = 1, (1 + c), -b;
    - Generalised operator assignment: 
        x = x + 1;        <->   x (+)= 1;
        x = func(y, x);   <->   x (func)= y;
    - Single-assignments can can be evaluated as
      expressions for chained assignment.
    - Conditional Ternary Operator
    - "Ouroboros" recursion operator: calls its enclosing function
    - Comments
    - Print statement
  + Relatively extensive example code base.



Did you get stuck, or couldn't work something out?

  Not enough time for everything we want to add!


-------------------------------------------------------------------------------
1. Install the Haskell Platform.
   Current version is 7.10.2
   https://www.haskell.org/platform/

   If this works you should now have the 'ghc', 'ghci' and 'cabal' commands.

   Cabal is the Haskell package manager and build tool.

   You can check the current install ghc version:

   $ ghc --version


2. Update the cabal package directory.
   This gets the list of available libraries from the online Hackage database.
   https://hackage.haskell.org/

   $ cabal update


3. Install some extra libraries.
   The template code uses these.
   The following command downloads them from Hackage.

   $ cabal install pretty-show
   $ cabal install Diff


4. Build the template code.

   $ cabal configure
   $ cabal build


5. Run some tests.

   The compiled executable is written to dist/build/imp/imp

   $ dist/build/imp/imp -lex test/works/factorial.imp


6. If you like, install your compiler.

   $ cabal install

   The executable will be installed in your system, 
   though the exact place depends on your OS.

   On OSX:   /Users/USER/Library/Haskell/bin
   On Linux: ~/.cabal/bin

   Add the correct directory to your $PATH.
