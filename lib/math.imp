fun  min(x, y)
vars cond
{       
        if (x < y) then
        {
                return x;
        }
        else
        {
                return y;
        }
}

fun  max(x, y)
vars cond
{       
        cond = (x > y);

        if cond then
        {
                return x;
        }
        else
        {
                return y;
        }
}

fun  not(x)
vars cond
{       
        cond = (x == 0);
        return cond;
}

fun xor(a, b)
vars result
{
        result = ((not(a) & b) | (a & not(b))); 
        return result;

}

fun  pow(x, y)
vars tmp
{       
        tmp = (y == 0);
        if tmp then
        {
                tmp = 1;
                return tmp;
        }

        tmp = 1;
        while y
        {
                tmp = (tmp * x);
                y = (y - 1);
        }
        return tmp;
}

fun  mod(x, y)
vars tmp
{       
        tmp = (x / y);
        tmp = (x - (tmp * y));
        return tmp;
}

fun  fromBase(x, y)
vars tmp, ten, ctr, tmp1, tmp2, ret
{       
        tmp = (y > 10);

        if tmp then
        {
                tmp = 0;
                return tmp;
        }

        ten = 10;
        ret = 0;
        tmp = x;
        ctr = 1;

        while tmp
        {
                tmp1 = mod(tmp, ten);
                tmp1 = ((pow(y, ctr) * tmp1) / y);
                tmp2 = ctr;
                ret = (ret + tmp1);
                ctr = (ctr + 1);
                tmp = (tmp / 10);
        }
        return ret;
}

fun  toBase(x, y)
vars tmp, ten, ctr, tmp1, tmp2, ret
{       
        tmp = (y > 10);

        if tmp then
        {
                tmp = 0;
                return tmp;
        }

        ten = 10;
        ret = 0;
        tmp = x;
        ctr = 1;

        while tmp
        {
                tmp1 = mod(tmp, y);
                tmp1 = ((pow(ten, ctr) * tmp1) / ten);
                tmp2 = ctr;
                ret = (ret + tmp1);
                ctr = (ctr + 1);
                tmp = (tmp / 10);
        }
        return ret;
}

fun  floor(x, y)
vars tmp
{              
        tmp = mod(x, y);
        tmp = (x - tmp);
        return tmp;
}

fun  ceil(x, y)
vars tmp
{              
        tmp = mod(x, y);
        tmp = ((x - tmp) + y);
        return tmp;
}

fun  round(x, y)
vars tmp
{             
        x = (x + (y / 2));
        tmp = mod(x, y);
        tmp = (x - tmp);
        return tmp;
}

fun  trunc(x, y)
vars tmp, ten, pw, ctr
{              
        
        ten = 10;
        pw = pow(ten, y);
        tmp = (x / pw);
        tmp = (tmp * pw);
        return tmp;
}

fun  sigFigs(x, y)
vars tmp, ten, pw, ctr, cond
{            
        ten = 10;
        ctr = 0;
        cond = x;
        while cond
        {
                cond = (cond / ten);
                ctr = (ctr + 1);
        }
        y = (ctr - y);
        pw = pow(ten, y);
        tmp = (x / pw);
        tmp = (tmp * pw);
        return tmp;
}

fun  ~(x)
vars tmp
{            
        tmp = (0 - x);
        return tmp;
}




fun  main()
vars tmp, tmp1
{       
        return min(tmp, tmp1);
}
